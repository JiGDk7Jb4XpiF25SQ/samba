<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE refentry
	PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<refentry id="ctdbd.conf.5">

  <refmeta>
    <refentrytitle>ctdbd.conf</refentrytitle>
    <manvolnum>5</manvolnum>
    <refmiscinfo class="source">ctdb</refmiscinfo>
    <refmiscinfo class="manual">CTDB - clustered TDB database</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>ctdbd.conf</refname>
    <refpurpose>CTDB daemon configuration file</refpurpose>
  </refnamediv>

  <refsect1>
    <title>DESCRIPTION</title>

    <para>
      This file contains CTDB configuration variables that are affect
      the operation of CTDB.  The default location of this file is
      <filename>/usr/local/etc/ctdb/ctdbd.conf</filename>.
    </para>

    <para>
      This file is a shell script (see
      <citerefentry><refentrytitle>sh</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry>) but is usually limited
      to simple variable assignments and shell-style comments.
    </para>

    <para>
      CTDB configuration variables are grouped into several categories below.
    </para>

    <para>
      Variables defined in this document can also be set in a
      distribution-specific configuration file such as
      <filename>/etc/sysconfig/ctdb</filename> (Red Hat) or
      <filename>/etc/default/ctdb</filename> (Debian).  However, these
      files should be reserved for variables used by the initscript.
      A historical alternative is
      <filename>/usr/local/etc/ctdb/sysconfig/ctdb</filename> - this is
      deprecated.
    </para>

  </refsect1>

  <refsect1>
    <title>
      DAEMON CONFIGURATION
    </title>

    <para>
      Variables in this section are processed by
      <citerefentry><refentrytitle>ctdbd_wrapper</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry> and are converted into
      command-line arguments to
      <citerefentry><refentrytitle>ctdbd</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry>.  Correspondence with
      <citerefentry><refentrytitle>ctdbd</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry> options is shown for
      each variable.  The the documentation for the relevant options
      for more details.
    </para>

    <para>
      Many of these variables are also used by event scripts.
    </para>

    <variablelist>

      <varlistentry>
	<term>CTDB_CAPABILITY_LMASTER=yes|no</term>
	<listitem>
	  <para>
	    Defaults to yes.  Corresponds to <option>--no-lmaster</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_CAPABILITY_RECMASTER=yes|no</term>
	<listitem>
	  <para>
	    Defaults to yes.  Corresponds to
	    <option>--no-recmaster</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_DBDIR=<parameter>DIRECTORY</parameter></term>
	<listitem>
	  <para>
	    Defaults to <filename>/usr/local/var/lib/ctdb/volatile</filename>.
	  </para>
	  <para>
	    Corresponds to <option>--dbdir</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_DBDIR_PERSISTENT=<parameter>DIRECTORY</parameter></term>
	<listitem>
	  <para>
	    Defaults to <filename>/usr/local/var/lib/ctdb/persistent</filename>.
	  </para>
	  <para>
	    Corresponds to <option>--dbdir-persistent</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_DBDIR_STATE=<parameter>DIRECTORY</parameter></term>
	<listitem>
	  <para>
	    Defaults to <filename>/usr/local/var/lib/ctdb/state</filename>.
	  </para>
	  <para>
	    Corresponds to <option>--dbdir-state</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_DEBUG_HUNG_SCRIPT=<parameter>FILENAME</parameter></term>
	<listitem>
	  <para>
	    FILENAME is a script to run to log debug information when
	    an event script times out.
	  </para>
	  <para>
	    Default is <filename>/usr/local/etc/ctdb/debug-hung-script.sh</filename>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_DEBUG_LOCKS=<parameter>FILENAME</parameter></term>
	<listitem>
	  <para>
	    FILENAME is a script to run to log debug information when
	    an CTDB fails to freeze databases during recovery.
	  </para>
	  <para>
	    No default, usually
	    <filename>/usr/local/etc/ctdb/debug_locks.sh</filename>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_DEBUGLEVEL=<parameter>DEBUGLEVEL</parameter></term>
	<listitem>
	  <para>
	    Default is NOTICE.  Corresponds to <option>-d</option> or
	    <option>--debug</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_LOGGING=<parameter>STRING</parameter></term>
	<listitem>
	  <para>
	    STRING specifies where ctdbd will write its log. The
	    default is
	    file:<filename>/usr/local/var/log/log.ctdb</filename>.
	    Corresponds to <option>--logging</option>.
	  </para>
	  <para>
	    Valid values are:
	  </para>
	  <variablelist>
	    <varlistentry>
	      <term>file:<parameter>FILENAME</parameter></term>
	      <listitem>
		<para>
		  FILENAME where ctdbd will write its log. This is usually
		  <filename>/usr/local/var/log/log.ctdb</filename>.
		</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>syslog<optional>:<parameter>METHOD</parameter></optional></term>
              <listitem>
                <para>
		  CTDB will log to syslog.  By default this will use
		  the syslog(3) API.
                </para>
		<para>
		  If METHOD is specified then it specifies an
		  extension that causes logging to be done in a
		  non-blocking fashion.  This can be useful under
		  heavy loads that might cause the syslog daemon to
		  dequeue messages too slowly, which would otherwise
		  cause CTDB to block when logging.  METHOD must be
		  one of:
		</para>
		<variablelist>
		  <varlistentry>
		    <term>nonblocking</term>
		    <listitem>
		      <para>
			CTDB will log to syslog via
			<filename>/dev/log</filename> in non-blocking
			mode.
		      </para>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term>udp</term>
		    <listitem>
		      <para>
			CTDB will log to syslog via UDP to
			localhost:514.  The syslog daemon must be
			configured to listen on (at least)
			localhost:514.  Most implementations will log
			the messages against hostname "localhost" -
			this is a limit of the implementation for
			compatibility with more syslog daemon
			implementations.
		      </para>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term>udp-rfc5424</term>
		    <listitem>
		      <para>
			As with "udp" but messages are sent in RFC5424
			format.  This method will log the correct
			hostname but is not as widely implemented in
			syslog daemons.
		      </para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_NOSETSCHED=yes|no</term>
	<listitem>
	  <para>
	    Defaults to no.  Corresponds to <option>--nosetsched</option>.
	  </para>
	  <para>
	    Usually CTDB runs with real-time priority.	If you are running
	    CTDB on a platform that does not support real-time priority,
	    you can set this.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_MAX_PERSISTENT_CHECK_ERRORS=<parameter>NUM</parameter></term>
	<listitem>
	  <para>
	    Default 0.  Corresponds to
	    <option>--max-persistent-check-errors</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_NODE_ADDRESS=<parameter>IPADDR</parameter></term>
	<listitem>
	  <para>
	    IPADDR is the private IP address that ctdbd will bind to.
	    Corresponds to <option>--listen</option>.
	  </para>
	  <para>
	    By default ctdbd will select the first address from the
	    nodes list that in can bind to.  See also the
	    <citetitle>Private address</citetitle> section in
	    <citerefentry><refentrytitle>ctdb</refentrytitle>
	    <manvolnum>7</manvolnum></citerefentry>.
	  </para>
	  <para>
	    This option is only required when automatic address
	    detection can not be used.  This can be the case when
	    running multiple ctdbd daemons/nodes on the same physical
	    host (usually for testing), using InfiniBand for the
	    private network or on Linux when sysctl
	    net.ipv4.ip_nonlocal_bind=1.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_RECOVERY_LOCK=<parameter>LOCK</parameter></term>
	<listitem>
	  <para>
	    LOCK specifies the cluster-wide mutex used to detect and
	    prevent a partitioned cluster (or "split brain").
	  </para>
	  <para>
	    No default, but the default configuration file specifies
	    <filename>/some/place/on/shared/storage</filename>, which
	    should be change to a useful value.  Corresponds to
	    <option>--reclock</option>.
	  </para>
	  <para>
	    For information about the recovery lock please see the
	    <citetitle>RECOVERY LOCK</citetitle> section in
	    <citerefentry><refentrytitle>ctdb</refentrytitle>
	    <manvolnum>7</manvolnum></citerefentry>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_SCRIPT_LOG_LEVEL=<parameter>DEBUGLEVEL</parameter></term>
	<listitem>
	  <para>
	    Defaults to ERR.  Corresponds to
	    <option>--script-log-level</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_START_AS_DISABLED=yes|no</term>
	<listitem>
	  <para>
	    Default is no.  Corresponds to
	    <option>--start-as-disabled</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_START_AS_STOPPED=yes|no</term>
	<listitem>
	  <para>
	    Default is no.  Corresponds to
	    <option>--start-as-stopped</option>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>CTDB_TRANSPORT=tcp|infiniband</term>
	<listitem>
	  <para>
	    Defaults to tcp.  Corresponds to
	    <option>--transport</option>.
	  </para>
	</listitem>
      </varlistentry>

    </variablelist>

  </refsect1>

  <refsect1>
    <title>FILES</title>

    <simplelist>
      <member><filename>/usr/local/etc/ctdb/ctdbd.conf</filename></member>
      <member><filename>/etc/sysconfig/ctdb</filename></member>
      <member><filename>/etc/default/ctdb</filename></member>
    </simplelist>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>
    <para>
      <citerefentry><refentrytitle>ctdbd</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry>,

      <citerefentry><refentrytitle>ctdbd_wrapper</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry>,

      <citerefentry><refentrytitle>onnode</refentrytitle>
      <manvolnum>1</manvolnum></citerefentry>,

      <citerefentry><refentrytitle>ctdb</refentrytitle>
      <manvolnum>7</manvolnum></citerefentry>,

      <citerefentry><refentrytitle>ctdb-tunables</refentrytitle>
      <manvolnum>7</manvolnum></citerefentry>,

      <ulink url="http://ctdb.samba.org/"/>
    </para>
  </refsect1>

  <refentryinfo>
    <author>
      <contrib>
	This documentation was written by
	Amitay Isaacs,
	Martin Schwenke
      </contrib>
    </author>

    <copyright>
      <year>2007</year>
      <holder>Andrew Tridgell</holder>
      <holder>Ronnie Sahlberg</holder>
    </copyright>
    <legalnotice>
      <para>
	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License as
	published by the Free Software Foundation; either version 3 of
	the License, or (at your option) any later version.
      </para>
      <para>
	This program is distributed in the hope that it will be
	useful, but WITHOUT ANY WARRANTY; without even the implied
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
	PURPOSE.  See the GNU General Public License for more details.
      </para>
      <para>
	You should have received a copy of the GNU General Public
	License along with this program; if not, see
	<ulink url="http://www.gnu.org/licenses"/>.
      </para>
    </legalnotice>
  </refentryinfo>

</refentry>
